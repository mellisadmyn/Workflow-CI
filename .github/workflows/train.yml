name: Train and Deploy Model

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train-deploy:
    runs-on: ubuntu-latest

    env:
      MLFLOW_TRACKING_URI     : https://dagshub.com/mellisadmyn/sleep_disorder_mlflow.mlflow
      MLFLOW_TRACKING_USERNAME: mellisadmyn
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

    steps:
      # Checkout the Repository contents to the GitHub Actions runner
      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      # Set up Python on the runner environment
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # Check all environment variables are correctly set
      - name: Check Env
        run: |
          echo "Python version: $(python --version)"
          echo "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
          echo "MLFLOW_TRACKING_USERNAME: $MLFLOW_TRACKING_USERNAME"
          echo "MLFLOW_TRACKING_PASSWORD is set: ${MLFLOW_TRACKING_PASSWORD:+yes}"
          echo "Current directory: $(pwd)"
          ls -la

      # Install required Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt

      # Run the MLflow project
      - name: Run MLflow project
        run: |
          mlflow run MLProject --env-manager=local --run-name rf_fixed_params

      # Get the latest MLflow run ID from the experiment stored in Dagshub
      - name: Get latest MLflow run_id
        run: |
          echo "Getting latest run ID..."
          python <<EOF
          import mlflow
          client = mlflow.tracking.MlflowClient()
          runs = client.search_runs(experiment_ids=["0"], order_by=["start_time DESC"])
          run_id = runs[0].info.run_id
          print(f"Latest run ID: {run_id}")
          with open("${{ github.env }}", "a") as f:
              f.write(f"RUN_ID={run_id}\n")
          EOF

      # Download trained model artifacts from Dagshub
      - name: Download model artifacts
        run: |
          echo "Downloading model artifact for run: $RUN_ID"
          mlflow artifacts download --run-id $RUN_ID --artifact-path rf_model -d ./downloaded
          mv ./downloaded/rf_model ./rf_model

      # Upload the downloaded model as a GitHub Actions artifact
      - name: Upload to GitHub artifact
        uses: actions/upload-artifact@v4
        with:
          name: rf_model_artifact
          path: ./rf_model

      # Build a Docker image from the trained MLflow model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri ./rf_model --name mellisadmyn/sleep-disorder-model

      # Authenticate to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Tag the Docker image with 'latest'
      - name: Tag Docker Image
        run: |
          docker tag mellisadmyn/sleep-disorder-model mellisadmyn/sleep-disorder-model:latest

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push mellisadmyn/sleep-disorder-model:latest
